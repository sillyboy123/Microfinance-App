@model MicrofinanceApp.Models.Transaction

@{
    ViewData["Title"] = "Record Transaction";
}

<div class="hero-section text-white mb-4">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8 text-center">
                <h1 class="display-4 fw-bold mb-3">Record New Transaction</h1>
                <p class="lead mb-0 opacity-90">Enter transaction details below</p>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-9">
            <div class="card border-0 shadow-lg rounded-4 mb-5">
                <div class="card-header bg-white p-4 border-0">
                    <div class="d-flex align-items-center">
                        <div class="avatar-initial rounded-circle d-flex align-items-center justify-content-center bg-primary bg-opacity-10 me-3"
                             style="width: 48px; height: 48px;">
                            <i class="fas fa-exchange-alt text-primary fs-4"></i>
                        </div>
                        <div>
                            <h4 class="mb-1 fw-bold">Transaction Information</h4>
                            <p class="text-muted mb-0">Fill in all required fields to record a new transaction</p>
                        </div>
                    </div>
                </div>                <div class="card-body p-4 pt-0">
                    <form asp-action="Create" id="transactionForm" method="post">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <div class="mb-4">
                            <label asp-for="ClientId" class="form-label fw-semibold">Select Client</label>
                            <div class="input-group input-group-lg shadow-sm rounded-4 overflow-hidden mb-2">
                                <span class="input-group-text bg-white border-end-0 text-primary">
                                    <i class="fas fa-user"></i>
                                </span>
                                <select asp-for="ClientId" class="form-select border-start-0" 
                                        asp-items="@((IEnumerable<SelectListItem>)ViewData["Clients"]!)" id="clientSelect" required>
                                    <option value="">Select a client...</option>
                                </select>
                            </div>
                            <span asp-validation-for="ClientId" class="text-danger"></span>
                            
                            <!-- Client Quick Info (appears when client is selected) -->
                            <div class="client-info mt-3 bg-light p-3 rounded-3 d-none" id="clientInfo">
                                <div class="d-flex align-items-center">
                                    <div class="avatar-initial rounded-circle d-flex align-items-center justify-content-center bg-gradient me-3"
                                         style="width: 45px; height: 45px; background: linear-gradient(45deg, #4158D0, #C850C0);">
                                        <span class="fs-5 text-white fw-bold" id="clientInitials">--</span>
                                    </div>
                                    <div>
                                        <h6 class="fw-bold mb-1" id="clientName">Client Name</h6>
                                        <p class="text-muted small mb-0" id="clientEmail">client@example.com</p>
                                    </div>
                                </div>
                            </div>
                        </div>                        <div class="row mt-4">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <label asp-for="Type" class="form-label fw-semibold">Transaction Type</label>
                                    <div class="input-group input-group-lg shadow-sm rounded-4 overflow-hidden mb-2">
                                        <span class="input-group-text bg-white border-end-0 text-primary">
                                            <i class="fas fa-exchange-alt"></i>
                                        </span>                                        <select asp-for="Type" class="form-select border-start-0" asp-items="Html.GetEnumSelectList<TransactionType>()" id="transactionType" required>
                                            <option value="">Select type...</option>
                                        </select>
                                    </div>
                                    <span asp-validation-for="Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <label asp-for="Amount" class="form-label fw-semibold">Amount</label>
                                    <div class="input-group input-group-lg shadow-sm rounded-4 overflow-hidden mb-2">
                                        <span class="input-group-text bg-white border-end-0 text-primary">
                                            <i class="fas fa-dollar-sign"></i>
                                        </span>                                        <input asp-for="Amount" class="form-control border-start-0" type="number" step="0.01" min="0.01" placeholder="Enter amount..." required />
                                    </div>
                                    <span asp-validation-for="Amount" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Transaction type context (changes based on selection) -->
                        <div id="typeContext" class="mb-4 d-none">
                            <div id="loanDisbursement" class="d-none">
                                <div class="alert alert-primary d-flex align-items-center" role="alert">
                                    <i class="fas fa-info-circle me-3 fs-4"></i>
                                    <div>
                                        <h6 class="alert-heading mb-1">Loan Disbursement</h6>
                                        <p class="mb-0 small">This will record funds given to the client as a loan.</p>
                                    </div>
                                </div>
                            </div>
                            <div id="loanRepayment" class="d-none">
                                <div class="alert alert-success d-flex align-items-center" role="alert">
                                    <i class="fas fa-check-circle me-3 fs-4"></i>
                                    <div>
                                        <h6 class="alert-heading mb-1">Loan Repayment</h6>
                                        <p class="mb-0 small">This will record a payment from the client towards their loan balance.</p>
                                    </div>
                                </div>
                            </div>
                            <div id="savingsDeposit" class="d-none">
                                <div class="alert alert-info d-flex align-items-center" role="alert">
                                    <i class="fas fa-piggy-bank me-3 fs-4"></i>
                                    <div>
                                        <h6 class="alert-heading mb-1">Savings Deposit</h6>
                                        <p class="mb-0 small">This will record funds added to the client's savings account.</p>
                                    </div>
                                </div>
                            </div>
                            <div id="savingsWithdrawal" class="d-none">
                                <div class="alert alert-warning d-flex align-items-center" role="alert">
                                    <i class="fas fa-wallet me-3 fs-4"></i>
                                    <div>
                                        <h6 class="alert-heading mb-1">Savings Withdrawal</h6>
                                        <p class="mb-0 small">This will record funds withdrawn from the client's savings account.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Description" class="form-label fw-semibold">Description</label>
                            <div class="input-group shadow-sm rounded-4 overflow-hidden mb-2">
                                <span class="input-group-text bg-white border-end-0 text-primary">
                                    <i class="fas fa-comment"></i>
                                </span>
                                <textarea asp-for="Description" class="form-control border-start-0" rows="3" placeholder="Add optional notes about this transaction..."></textarea>
                            </div>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <!-- Transaction Summary -->
                        <div class="card border-0 shadow-sm rounded-4 bg-light mt-4 mb-4 d-none" id="transactionSummary">
                            <div class="card-body p-3">
                                <h6 class="fw-bold mb-3">Transaction Summary</h6>
                                <div class="row">
                                    <div class="col-6">
                                        <p class="text-muted mb-1">Client:</p>
                                        <p class="fw-medium mb-3" id="summaryClient">-</p>
                                    </div>
                                    <div class="col-6">
                                        <p class="text-muted mb-1">Type:</p>
                                        <p class="fw-medium mb-3" id="summaryType">-</p>
                                    </div>
                                    <div class="col-6">
                                        <p class="text-muted mb-1">Amount:</p>
                                        <p class="fw-medium mb-0" id="summaryAmount">-</p>
                                    </div>
                                    <div class="col-6">
                                        <p class="text-muted mb-1">Date:</p>
                                        <p class="fw-medium mb-0" id="summaryDate">@DateTime.Now.ToString("MMMM dd, yyyy")</p>
                                    </div>
                                </div>
                            </div>
                        </div>                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary btn-lg py-3 rounded-pill" id="submitButton">
                                <i class="fas fa-save me-2"></i>Record Transaction
                                <span class="spinner-border spinner-border-sm ms-1 d-none" id="submitSpinner" role="status" aria-hidden="true"></span>
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary py-3 rounded-pill">
                                <i class="fas fa-arrow-left me-2"></i>Back to Transactions                            </a>                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Initialize form validation
            $('#transactionForm').validate({
                rules: {
                    ClientId: {
                        required: true
                    },
                    Amount: {
                        required: true,
                        min: 0.01
                    },
                    Type: {
                        required: true
                    }
                }
            });            // Disable form resubmission
            $('#transactionForm').submit(function () {
                // Validate form manually before disabling the button
                if ($(this).valid()) {
                    // Log form data for debugging
                    console.log("Form is valid, submitting with ClientId: " + $('#clientSelect').val() + 
                                ", Amount: " + $('#Amount').val() + 
                                ", Type: " + $('#transactionType').val());
                    
                    // Show loading state
                    $('#submitButton').prop('disabled', true)
                        .html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Processing...');
                    
                    return true;
                }
                return false;
            });
            
            // Client select change event
            $('#clientSelect').change(function() {
                const clientId = $(this).val();
                if (clientId) {
                    const selectedOption = $(this).find('option:selected');
                    const clientText = selectedOption.text();
                    
                    // Extract the name and email
                    const nameMatch = clientText.match(/(.*?)\s\(/);
                    const emailMatch = clientText.match(/\((.*?)\)/);
                    
                    if (nameMatch && nameMatch[1] && emailMatch && emailMatch[1]) {
                        const name = nameMatch[1].trim();
                        const email = emailMatch[1].trim();
                        const nameParts = name.split(' ');
                        const initials = nameParts.length > 1 ? 
                            `${nameParts[0][0]}${nameParts[1][0]}` : `${nameParts[0][0]}${nameParts[0][1]}`;
                        
                        // Update client info display
                        $('#clientInitials').text(initials.toUpperCase());
                        $('#clientName').text(name);
                        $('#clientEmail').text(email);
                        $('#clientInfo').removeClass('d-none').addClass('animate__animated animate__fadeIn');
                        $('#summaryClient').text(name);
                    }
                    
                    updateTransactionSummary();
                } else {
                    $('#clientInfo').addClass('d-none');
                    $('#summaryClient').text('-');
                }
            });
            
            // Transaction type change event
            $('#transactionType').change(function() {
                const type = $(this).val();
                
                // Hide all type contexts first
                $('#typeContext').addClass('d-none');
                $('#loanDisbursement, #loanRepayment, #savingsDeposit, #savingsWithdrawal').addClass('d-none');
                
                if (type) {
                    $('#typeContext').removeClass('d-none');
                    
                    // Show specific context based on type
                    switch (type) {
                        case '0': // LoanDisbursement
                            $('#loanDisbursement').removeClass('d-none');
                            $('#summaryType').text('Loan Disbursement').addClass('text-primary');
                            break;
                        case '1': // LoanRepayment
                            $('#loanRepayment').removeClass('d-none');
                            $('#summaryType').text('Loan Repayment').addClass('text-success');
                            break;
                        case '2': // SavingsDeposit
                            $('#savingsDeposit').removeClass('d-none');
                            $('#summaryType').text('Savings Deposit').addClass('text-info');
                            break;
                        case '3': // SavingsWithdrawal
                            $('#savingsWithdrawal').removeClass('d-none');
                            $('#summaryType').text('Savings Withdrawal').addClass('text-warning');
                            break;
                        default:
                            $('#summaryType').text($(this).find("option:selected").text()).removeClass('text-primary text-success text-info text-warning');
                    }
                    
                    updateTransactionSummary();
                } else {
                    $('#summaryType').text('-').removeClass('text-primary text-success text-info text-warning');
                }
            });
            
            // Amount change event
            $('#Amount').on('input', function() {
                const amount = $(this).val();
                if (amount && !isNaN(amount)) {
                    $('#summaryAmount').text('$' + parseFloat(amount).toLocaleString('en-US', {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 2
                    }));
                    updateTransactionSummary();
                } else {
                    $('#summaryAmount').text('-');
                }
            });
            
            // Update transaction summary
            function updateTransactionSummary() {
                if ($('#clientSelect').val() && $('#transactionType').val() && $('#Amount').val()) {
                    $('#transactionSummary').removeClass('d-none').addClass('animate__animated animate__fadeIn');
                } else {
                    $('#transactionSummary').addClass('d-none');
                }
            }
            
            // If there's any value in the form fields on page load (e.g. after validation error),
            // trigger change events to update UI
            if ($('#clientSelect').val()) {
                $('#clientSelect').trigger('change');
            }
            
            if ($('#transactionType').val()) {
                $('#transactionType').trigger('change');
            }            if ($('#Amount').val()) {
                $('#Amount').trigger('input');
            }
        });
    </script>
}
